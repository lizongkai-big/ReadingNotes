<?xml version="1.0" encoding="UTF-8"?>
<!-- 【项目管理】generatorConfig.xml配置信息详细 https://blog.csdn.net/zsq520520/article/details/50948926 -->
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--数据库驱动-->
    <context id="Mysql" targetRuntime="tk.mybatis.mapper.generator.TkMyBatis3Impl" defaultModelType="flat">

        <property name="javaFileEncoding" value="UTF-8"/>

        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
            <!-- caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true -->
            <property name="caseSensitive" value="true"/>
        </plugin>
        
        <!--commentGenerator生成的代码中可以包含注释信息，具体就是生成表或字段的备注信息。-->
        <commentGenerator>
            <!--**阻止**生成注释，默认为false-->
            <property name="suppressAllComments" value="true"></property>
            <!--**阻止**生成的注释包含时间戳，默认为false-->
            <property name="suppressDate" value="true"></property>
            <!--生成的代码编码格式-->
            <property name="javaFileEncoding" value="utf-8"/>
        </commentGenerator>

        <!--指定数据库连接信息-->
        <jdbcConnection driverClass="${driverClass}"
                        connectionURL="${connectionURL}"
                        userId="${userId}"
                        password="${password}">
        </jdbcConnection>

        <!--指定JDBC类型和Java类型如何转换
        该属性可以控制是否强制DECIMAL和NUMERIC类型的字段转换为Java类型的java.math.BigDecimal,
        默认值为false.-->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--该元素用来控制生成的实体类,即生成model的包名和位置-->
        <!--targetPackage:生成实体类存放的包名-->
        <!--targetProject:指定目标项目路径，使用的是文件系统的绝对路径-->
        <javaModelGenerator targetPackage="${modelPackage}" targetProject="${src_main_java}">
            <!-- 如果true，mybatis-generator会根据catalog和schema来生成子包。如果false就会直接用targetPackage属性。默认为false。 -->
            <property name="enableSubPackages" value="true"></property>
            <!--trimStrings:是否对数据库查询结果进行trim操作-->
            <property name="trimStrings" value="true"></property>
        </javaModelGenerator>

        <!--生成xml mapper文件 路径 -->
        <sqlMapGenerator targetPackage="${sqlMapperPackage}" targetProject="${src_main_java}">
            <property name="enableSubPackages" value="true"></property>
        </sqlMapGenerator>

        <!--XMLMAPPER:所有的方法都在XML中，接口调用依赖XML文件。-->
        <javaClientGenerator targetPackage="${daoPackage}" targetProject="${src_main_java}"  type="XMLMAPPER">
            <property name="enableSubPackages" value="true"></property>
        </javaClientGenerator>

        <!-- sql占位符，表示所有的表 
        tableName:指定要生成的表名
        enableXXX:XXX代表多种SQL方法，该属性用来指定是否生成对应的XXX语句-->
        <table tableName="%" mapperName="{0}Dao"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
            <generatedKey column="id" sqlStatement="Mysql" identity="true"/>
        </table>
    </context>
</generatorConfiguration>